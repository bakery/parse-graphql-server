{"version":3,"sources":["server/lib/model.js"],"names":["create","buildOptions","options","sessionToken","Object","assign","ParseObject","looksLikeLegitParseObject","className","Error","extend","save","target","prototype","call","saveAll","list","destroy","destroyAll","fetch"],"mappings":";;;;;QAIgBA,M,GAAAA,M;AAJhB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,CAACC,OAAD,EAAUC,YAAV;AAAA,SAA2BC,OAAOC,MAAP,CAAcH,WAAW,EAAzB,EAA6B,EAAEC,0BAAF,EAA7B,CAA3B;AAAA,CAArB;;AAEO,SAASH,MAAT,CAAgBM,WAAhB,EAAgD;AAAA,MAAnBH,YAAmB,uEAAJ,EAAI;;AACrD,MAAMI,4BAA4BD,eAChC,OAAOA,WAAP,KAAuB,UADS,IACKA,YAAYE,SADnD;;AAGA,MAAI,CAACD,yBAAL,EAAgC;AAC9B,UAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,MAAI,CAACN,YAAL,EAAmB;AACjB,WAAOG,WAAP;AACD;;AAED,SAAOA,YAAYI,MAAZ,CAAmB;AACxBC,QADwB,gBACnBC,MADmB,EACXV,OADW,EACF;AACpB,aAAOI,YAAYO,SAAZ,CAAsBF,IAAtB,CAA2BG,IAA3B,CAAgC,IAAhC,EAAsCF,MAAtC,EAA8CX,aAAaC,OAAb,EAAsBC,YAAtB,CAA9C,CAAP;AACD,KAHuB;AAKxBY,WALwB,mBAKhBC,IALgB,EAKVd,OALU,EAKD;AACrB,aAAOI,YAAYO,SAAZ,CAAsBE,OAAtB,CAA8BD,IAA9B,CAAmC,IAAnC,EAAyCE,IAAzC,EAA+Cf,aAAaC,OAAb,EAAsBC,YAAtB,CAA/C,CAAP;AACD,KAPuB;AASxBc,WATwB,mBAShBf,OATgB,EASP;AACf,aAAOI,YAAYO,SAAZ,CAAsBI,OAAtB,CAA8BH,IAA9B,CAAmC,IAAnC,EAAyCb,aAAaC,OAAb,EAAsBC,YAAtB,CAAzC,CAAP;AACD,KAXuB;AAaxBe,cAbwB,sBAabF,IAba,EAaPd,OAbO,EAaE;AACxB,aAAOI,YAAYO,SAAZ,CAAsBK,UAAtB,CAAiCJ,IAAjC,CAAsC,IAAtC,EAA4CE,IAA5C,EAAkDf,aAAaC,OAAb,EAAsBC,YAAtB,CAAlD,CAAP;AACD,KAfuB;AAiBxBgB,SAjBwB,iBAiBlBjB,OAjBkB,EAiBT;AACb,aAAOI,YAAYO,SAAZ,CAAsBM,KAAtB,CAA4BL,IAA5B,CAAiC,IAAjC,EAAuCb,aAAaC,OAAb,EAAsBC,YAAtB,CAAvC,CAAP;AACD;AAnBuB,GAAnB,CAAP;AAqBD","file":"model.js","sourcesContent":["/* eslint import/prefer-default-export: off */\n\nconst buildOptions = (options, sessionToken) => Object.assign(options || {}, { sessionToken });\n\nexport function create(ParseObject, sessionToken = '') {\n  const looksLikeLegitParseObject = ParseObject &&\n    typeof ParseObject === 'function' && ParseObject.className;\n\n  if (!looksLikeLegitParseObject) {\n    throw new Error('create requires a class based on Parse.Object');\n  }\n\n  if (!sessionToken) {\n    return ParseObject;\n  }\n\n  return ParseObject.extend({\n    save(target, options) {\n      return ParseObject.prototype.save.call(this, target, buildOptions(options, sessionToken));\n    },\n\n    saveAll(list, options) {\n      return ParseObject.prototype.saveAll.call(this, list, buildOptions(options, sessionToken));\n    },\n\n    destroy(options) {\n      return ParseObject.prototype.destroy.call(this, buildOptions(options, sessionToken));\n    },\n\n    destroyAll(list, options) {\n      return ParseObject.prototype.destroyAll.call(this, list, buildOptions(options, sessionToken));\n    },\n\n    fetch(options) {\n      return ParseObject.prototype.fetch.call(this, buildOptions(options, sessionToken));\n    },\n  });\n}\n"]}